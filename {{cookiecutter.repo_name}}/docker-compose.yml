version: '3.8'

services:

  db:
    image: postgres:latest
    container_name: {{cookiecutter.repo_name}}_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: "{{ cookiecutter.db_user }}"
      POSTGRES_PASSWORD: "{{ cookiecutter.db_user_pwd }}"
      POSTGRES_DB: "db{{ cookiecutter.repo_name }}"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - '5433:5432'
    volumes:
      - db-data:/var/lib/postgresql/data/

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui

  app:
    image: {{cookiecutter.repo_name}}_app
    container_name: {{cookiecutter.repo_name}}_app
    build:
      context: ./
      dockerfile: ./compose/app/Dockerfile.local
    restart: unless-stopped
    working_dir: /home/app/{{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}
    env_file:
      - ./{{ cookiecutter.repo_name }}/.env
    command: bash -c "source ../../venv/bin/activate && pip install -r requirements/local.txt && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/home/app/{{cookiecutter.repo_name}}
      - virtualenv:/home/app/venv
      - ~/.ssh:/root/.ssh
    ports:
      - '8000:8000'
      - '8001:8001' # to run pdb
    depends_on:
      - db

volumes:

  db-data:
    driver: local
  virtualenv:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/.virtualenv
      o: bind
